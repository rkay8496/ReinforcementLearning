const int N;

filter(avg, R{"step"}=? [ F stuck&!open ], "s0")

filter(avg, R{"step"}=? [ F force&!open ], "s0")

filter(avg, R{"step"}=? [ F !arrived&open ], "s0")

filter(avg, R{"step"}=? [ F moving&open ], "s0")

filter(avg, R{"step"}=? [ F stuck&close ], "s0")

filter(avg, R{"step"}=? [ F close ], emergency)

filter(avg, S=? [ stuck&!open ], "s0")

filter(avg, S=? [ force&!open ], "s0")

filter(avg, S=? [ !arrived&open ], "s0")

filter(avg, S=? [ moving&open ], "s0")

filter(avg, S=? [ stuck&close ], "s0")

filter(avg, S=? [ close ], emergency)

